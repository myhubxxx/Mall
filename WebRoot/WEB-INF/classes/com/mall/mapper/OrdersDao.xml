<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 配置命名空间，区别名称 -->

<mapper namespace="com.mall.dao.OrdersDao">
	<resultMap id="orders" type="com.mall.domain.Orders">
		<id property="oid" column="oid"/>
		<result property="time" column="time"/>
		<result property="count" column="count"/>
		<result property="status" column="status"/>
		<result property="expressNumber" column="expressNumber"/>
		<result property="phoneNumber" column="phoneNumber"/>
		<result property="address" column="address"/>
	</resultMap>
	
	<insert id="add" parameterType="com.mall.domain.Orders">
		insert into orders
		(oid,	time,	count,	status,		phoneNumber,address,	uid)
		values
		(#{oid},#{time},#{count},#{status},#{phoneNumber},#{address},#{user.uid})
	</insert>
	<resultMap id="ordersOrderInfo" type="com.mall.domain.Orders" extends="orders">
		<collection property="orderInfoList" resultMap="com.mall.dao.OrderInfoDao.orderInfo"></collection>
	</resultMap>
	<select id="getByIdMap" parameterType="map" resultMap="ordersOrderInfo">
		select 
		o.oid,o.time,o.count,o.status,o.expressNumber,o.phoneNumber,o.address,o.uid,
		oi.orid,oi.number,oi.total,oi.oid,oi.gid,oi.g_name,oi.nowPrice,oi.image_b,oi.oid as oioid
		from orders as o
		left outer join 
		orderinfo as oi
		on o.oid = oi.oid
		where
		o.oid = #{oid}
		union
		(select 
		o.oid,o.time,o.count,o.status,o.expressNumber,o.phoneNumber,o.address,o.uid,
		oi.orid,oi.number,oi.total,oi.oid,oi.gid,oi.g_name,oi.nowPrice,oi.image_b,oi.oid as oioid
		from orders as o
		left outer join 
		<if test="index == null">orderinfo as oi</if>
		<if test="index != null">orderinfo_${index} as oi</if>
		on o.oid = oi.oid
		where
		o.oid = #{oid})
	</select>
	<select id="getByIdMapAdmin" parameterType="map" resultMap="ordersOrderInfo">
		select 
		o.oid,o.time,o.count,o.status,o.expressNumber,o.phoneNumber,o.address,o.uid,
		oi.orid,oi.number,oi.total,oi.oid,oi.gid,oi.g_name,oi.nowPrice,oi.image_b,oi.oid as oioid
		from orders as o
		left outer join 
		(select * from orderinfo_1 
		union select * from orderinfo_2
		union select * from orderinfo_3 
		union select * from orderinfo_4
		) 
		as oi		
		on o.oid = oi.oid
		where
		o.oid = #{oid}
	</select>
	<update id="updateByIdMap" parameterType="map">
		update orders
		<set>
	      <if test="status != null" >status = #{status},</if>
	      <if test="expressNumber != null" >expressNumber = #{expressNumber},</if>
		</set>
		where oid = #{oid}
	</update>
	
	
	<select id="getAllCount" parameterType="map" resultType="int">
		select count(*)  from orders
		<where>
			1 = 1 
			<if test="status != null and status != ''"> and status = #{status}</if>
			<if test="uid != null and uid != ''"> and uid = #{uid}</if>
		</where>
		order by time desc
	</select>

	<!-- can't get goods  -->
	<!-- <resultMap id="ordersOrderInfoGoods" type="com.mall.domain.Orders" extends="orders">
		<collection property="orderInfoList" resultMap="com.mall.dao.OrderInfoDao.orderInfo">
			<association property="goods" resultMap="com.mall.dao.GoodsDao.goods"></association>
		</collection>
	</resultMap> -->
	
	<select id="getByGoodsPage" parameterType="map" resultMap="ordersOrderInfo">
		<!-- (select 
		o.oid,o.time,o.count,o.status,o.expressNumber,o.phoneNumber,o.address,o.uid,
		oi.orid,oi.number,oi.total,oi.oid,oi.gid,oi.g_name,oi.nowPrice,oi.image_b,oi.oid as oioid
		from orders as o
		left outer join 
		orderinfo as oi
		on o.oid = oi.oid
		<where>
			1 = 1 
			<if test="status != null"> and status = #{status}</if>
			<if test="uid != null and uid != ''"> and uid = #{uid}</if>
		</where> 
		order by time desc
		limit #{lose},#{pageSize})
		
		union -->
		
		select * from
		(select 
		o.oid,o.time,o.count,o.status,o.expressNumber,o.phoneNumber,o.address,o.uid
		<!-- oi.orid,oi.number,oi.total,oi.oid,oi.gid,oi.g_name,oi.nowPrice,oi.image_b,oi.oid as oioid -->
		from orders as o
		<where>
			1 = 1 
			<if test="status != null"> and status = #{status}</if>
			<if test="uid != null and uid != ''"> and uid = #{uid}</if>
		</where> 
		order by time desc
		limit #{lose},#{pageSize})
		as o 
		left outer join 
		orderinfo_${index} as oi
		on o.oid = oi.oid
	</select>
	
	<select id="getByGoodsPageAdmin" parameterType="map" resultMap="ordersOrderInfo">
		
		select * from
		(select 
		o.oid,o.time,o.count,o.status,o.expressNumber,o.phoneNumber,o.address,o.uid
		<!-- oi.orid,oi.number,oi.total,oi.oid,oi.gid,oi.g_name,oi.nowPrice,oi.image_b,oi.oid as oioid -->
		from orders as o
		<where>
			1 = 1 
			<if test="status != null"> and status = #{status}</if>
			<if test="uid != null and uid != ''"> and uid = #{uid}</if>
		</where> 
		order by time desc
		limit #{lose},#{pageSize})
		as o 
		left outer join
		(select * from orderinfo_1 
		union select * from orderinfo_2
		union select * from orderinfo_3 
		union select * from orderinfo_4
		) as oi
		on o.oid = oi.oid
	</select>
	
	<!-- <resultMap id="ordersOrderInfoPage" type="com.mall.domain.Orders" extends="orders">
		<collection property="orderInfoList" column="oid"  javaType="list" ofType="com.mall.domain.OrderInfo"  select="com.mall.dao.OrderInfoDao.getByOid">
			<id property="orid" column="orid"/>
			<result property="number" column="number"/>
			<result property="total" column="total"/>
			<result property="gid" column="gid"/>
			<result property="g_name" column="g_name"/>
			<result property="nowPrice" column="nowPrice"/>
			<result property="image_b" column="image_b"/> 
		</collection>
	</resultMap>
	<select id="getByGoodsListPage" parameterType="map" resultMap="ordersOrderInfoPage">
		select 
		o.oid,o.time,o.count,o.status,o.expressNumber,o.phoneNumber,o.address,o.uid
		from orders as o
		<where>
			1 = 1 
			<if test="status != null"> and status = #{status}</if>
			<if test="uid != null and uid != ''"> and uid = #{uid}</if>
		</where> 
		order by time desc
		limit #{lose},#{pageSize}
	</select> -->
	
</mapper>